{"version":3,"file":"static/js/202.f9574c8c.chunk.js","mappings":"mLACA,EAA0B,wBAA1B,EAAiE,6B,SCGlD,SAASA,IAEpB,OACI,iCACA,gBAAKC,UAAWC,EAAhB,UAEI,SAAC,KAAD,CACIC,OAAO,MACPC,MAAM,MACNC,MAAM,UACNC,UAAU,kBACVC,aAAc,CAAC,EACfC,aAAa,GACbC,SAAS,OAIb,eAAIR,UAAWC,EAAf,2BAGX,C,8ICtBYQ,EAAS,mCAAG,WAAMC,GAAN,gFACjBC,EAAS,CACbC,IAAI,gBACJC,QAAS,+BACTH,OAAQ,CACNI,QAAS,mCACTC,MAAOL,IANY,UAUAM,EAAAA,EAAAA,GAAML,GAVN,cAUjBM,EAViB,yBAWhBA,EAASC,KAAKC,SAXE,2CAAH,sD,SCDtB,EAA0B,wBAA1B,EAAsD,kBAAtD,EAAgF,sBAAhF,EAA6G,qBAA7G,EAAyI,qBAAzI,EAAqK,qBAArK,EAAmM,uBAAnM,EAAuO,2BAAvO,EAA0Q,sB,SCsF1Q,EAjFe,WAAO,IAAD,EACjB,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KACA,GAAgCN,EAAAA,EAAAA,WAAS,GAAzC,eAAOO,EAAP,KAAiBC,EAAjB,KACA,GAAoCR,EAAAA,EAAAA,UAAS,IAA7C,eAAOS,EAAP,KAAmBC,EAAnB,KAEMC,GAAWC,EAAAA,EAAAA,MACjB,GAA0CC,EAAAA,EAAAA,MAA1C,eAAQC,EAAR,KAAsBC,EAAtB,KACMC,EAAO,UAAGF,EAAaG,IAAI,gBAApB,QAA8B,IAIzCC,EAAAA,EAAAA,YAAU,WACJF,IACJR,GAAY,GACZF,EAAS,MACPF,GAAa,GAEnBf,EAAU2B,GACPG,MAAK,SAAAtB,GACJK,EAAUL,GACc,IAApBA,EAASuB,QAAcZ,GAAY,EACxC,IACAa,OAAM,SAAAhB,GAAK,OAAIC,EAASD,EAAMiB,QAAnB,IACXC,SAAQ,WACPnB,GAAa,EACd,IACJ,GAAE,CAACY,IAcF,OACQ,iBAAKpC,UAAWC,EAAhB,WACI,kBAAM2C,SATG,SAAAC,GACjBA,EAAIC,iBACJX,EAA6B,KAAbN,EAAgB,CAAEd,MAAOc,EAAWkB,QAAS,CAAC,GAC9DjB,EAAc,GACjB,EAKyC9B,UAAWC,EAAzC,WACI,kBACA+C,KAAK,cACLC,KAAK,OACLC,MAAOrB,EACPsB,SAlBW,SAAAN,GAC3B,IAAQK,EAAUL,EAAIO,OAAdF,MACRpB,EAAcoB,EACf,EAgBiBlD,UAAYC,KACZ,mBAAQD,UAAWC,EAAnB,sBAGHwB,IAAS,6CAAqBA,KAElCJ,EAAOmB,OAAS,IACb,iCACA,eAAIxC,UAAWC,EAAf,6BACA,eAAID,UAAWC,EAAf,SACKoB,EAAOgC,KAAI,SAAAC,GACR,OACI,eAAmBtD,UAAWC,EAA9B,UACI,SAAC,KAAD,CAAMsD,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAACC,KAAM3B,GAAW/B,UAAWC,EAArE,SACKqD,EAAMK,SAFNL,EAAME,GAMtB,SAIJ7B,IACG,cAAG3B,UAAWC,EAAd,uCAGHsB,IAAa,SAACxB,EAAA,EAAD,MAI7B,C","sources":["webpack://react-homework-template/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.js","pages/Movies/MoviesApi.js","webpack://react-homework-template/./src/pages/Movies/Movies.module.css?82ee","pages/Movies/Movies.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"spinner\":\"Loader_spinner__iDFIv\",\"loader_title\":\"Loader_loader_title__kMPzZ\"};","import { Circles} from  'react-loader-spinner'\n\nimport styles from '../Loader/Loader.module.css';\n\nexport default function Loader() {\n  \n    return (\n        <>\n        <div className={styles.spinner}>\n            \n            <Circles\n                height=\"180\"\n                width=\"180\"\n                color=\"#4fa94d\"\n                ariaLabel=\"circles-loading\"\n                wrapperStyle={{}}\n                wrapperClass=\"\"\n                visible={true}\n            />\n            \n            </div>\n            <h1 className={styles.loader_title}> Loading...</h1>\n      </>     \n    );\n}\n","import axios from 'axios';\n\nexport const MoviesApi = async params => {\n  const config = {\n    url: `/search/movie`,\n    baseURL: 'https://api.themoviedb.org/3',\n    params: {\n      api_key: 'd47b41929439187d961c9c4541d50141',\n      query: params,\n    },\n  };\n\n  const response = await axios(config);\n  return response.data.results;\n};","// extracted by mini-css-extract-plugin\nexport default {\"section\":\"Movies_section__bjPDA\",\"p\":\"Movies_p__ZprHg\",\"title\":\"Movies_title__MDLXB\",\"list\":\"Movies_list__hqYjd\",\"item\":\"Movies_item__Ba4aJ\",\"link\":\"Movies_link__MzAfU\",\"Button\":\"Movies_Button__0LdR0\",\"searchForm\":\"Movies_searchForm__J4-xw\",\"input\":\"Movies_input__KrUqs\"};","import { useEffect, useState } from \"react\";\nimport { Link, useLocation, useSearchParams } from \"react-router-dom\";\nimport { MoviesApi } from \"../Movies/MoviesApi\";\nimport Loader from \"../../components/Loader/Loader\";\nimport styles from \"../Movies/Movies.module.css\";\n\nconst Movies = () => {\n    const [movies, setMovies] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState(null);\n    const [notFound, setNotFound] = useState(false);\n    const [movieInput, setMovieInput] = useState('');\n    \n    const location = useLocation();\n    const [ searchParams, setSearchParams ] = useSearchParams();\n    const movieId = searchParams.get('query')??'';//прочитать из url тут хранится фильтр\n\n    \n    //из запроса приходит колллекция сохраняестя в стейт \n      useEffect(() => {\n       if (!movieId) return;\n        setNotFound(false);\n        setError(null);\n          setIsLoading(true);\n          \n    MoviesApi(movieId)\n      .then(response => {\n        setMovies(response);\n        if (response.length === 0) setNotFound(true);\n      })\n      .catch(error => setError(error.message))\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }, [movieId]);   \n    \n    \n     const handleInputChange = evt => {\n    const { value } = evt.target;\n    setMovieInput(value);\n  };\n    const onFormSubmit = evt => {\n        evt.preventDefault();\n        setSearchParams(movieInput!==\"\"?{ query: movieInput.trim() }:{});\n        setMovieInput('');\n    };\n    \n   \n    return (\n            <div className={styles.section}>\n                <form onSubmit={onFormSubmit} className={styles.searchForm}>\n                    <input\n                    name=\"searchInput\"\n                    type=\"text\"\n                    value={movieInput}\n                    onChange={handleInputChange}\n                    className={ styles.input} />\n                    <button className={styles.Button}>serch</button>\n            </form>\n            \n                {error && <p>Oops, some error:{error}</p>}\n\n            {movies.length > 0 && (\n                <>\n                <h2 className={styles.title}>Search results</h2>\n                <ul className={styles.list}>\n                    {movies.map(movie => {\n                        return (\n                            <li key={movie.id} className={styles.item}>\n                                <Link to={`/movies/${movie.id}`} state={{from: location}} className={styles.link}>\n                                    {movie.title}\n                                </Link>\n                            </li>\n                        );\n                    })}\n                </ul>\n                </>\n            )}\n                {notFound && (\n                    <p className={styles.p}>Nothing found. Try again.</p>\n                )}\n\n                {isLoading && <Loader />}   \n            </div>\n      \n    )\n};\nexport default Movies;\n"],"names":["Loader","className","styles","height","width","color","ariaLabel","wrapperStyle","wrapperClass","visible","MoviesApi","params","config","url","baseURL","api_key","query","axios","response","data","results","useState","movies","setMovies","isLoading","setIsLoading","error","setError","notFound","setNotFound","movieInput","setMovieInput","location","useLocation","useSearchParams","searchParams","setSearchParams","movieId","get","useEffect","then","length","catch","message","finally","onSubmit","evt","preventDefault","trim","name","type","value","onChange","target","map","movie","to","id","state","from","title"],"sourceRoot":""}